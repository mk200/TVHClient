apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'io.fabric'
apply plugin: 'com.google.firebase.firebase-perf'

apply from: '../signing.gradle'

android {
    compileSdkVersion 29
    defaultConfig {

        minSdkVersion 16
        targetSdkVersion 29

        versionCode 204
        versionName "2.4.0"

        // Define the apk naming convention
        applicationId "org.tvheadend.tvhclient"
        setProperty("archivesBaseName", "${applicationId}-${versionName}-${versionCode}")

        // Set the default values for these build config fields
        buildConfigField "String", "DEVELOPER_EMAIL", "\"\""
        buildConfigField "String", "PUBLIC_KEY_SALT", "\"\""
        buildConfigField "Integer", "BUILD_VERSION", "$versionCode"

        // Include the build time and git commit hash in the crash reports
        def gitSha = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim()
        def buildTime = new GregorianCalendar().format("yyyy.MM.dd HH:mm:ss")
        buildConfigField "String", "BUILD_TIME", "\"${buildTime}\""
        buildConfigField "String", "GIT_SHA", "\"${gitSha}\""

        // The cast ID that the app shall use
        buildConfigField "String", "CAST_ID", "\"0531DF56\""

        // Support vector drawable and animated vector drawable on devices
        // running platform versions lower than Android 5.0 (API level 21)
        vectorDrawables.useSupportLibrary = true

        multiDexEnabled true

        lintOptions {
            // Do not check for lint errors to reduce the  build time.
            // Lint checks will be done manually before a release
            checkReleaseBuilds false
        }

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    dataBinding {
        enabled = true
    }

    androidExtensions {
        experimental = true
    }

    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    testOptions {
        unitTests.includeAndroidResources = true
    }

    buildTypes {
        debug {
            // Show all features when true
            buildConfigField "Boolean", "UNLOCKED", "false"
            // Enable all logging, otherwise it is suppressed
            buildConfigField "Boolean", "DEBUG_LOG", "true"

            // Set this flag to 'false' to disable crashlytics
            // in debug builds and to decrease up build times
            ext.enableCrashlytics = false
            ext.alwaysUpdateBuildId = false

            FirebasePerformance {
                // Set this flag to 'false' to disable @AddTrace annotation processing and
                // automatic HTTP/S network request monitoring for a specific build variant at compile time.
                instrumentationEnabled false
            }
        }
        release {
            // Show all features when true
            buildConfigField "Boolean", "UNLOCKED", "false"
            // Enable all logging, otherwise it is suppressed
            buildConfigField "Boolean", "DEBUG_LOG", "true"

            // The property file must exist in release mode so that the
            // actual values can be assigned from the property file to these fields.
            if (tvhHasProperty("developerEmail")) {
                buildConfigField "String", "DEVELOPER_EMAIL", "\"" + tvhProperty("developerEmail") + "\""
            }
            if (tvhHasProperty("publicKeySalt")) {
                buildConfigField "String", "PUBLIC_KEY_SALT", "\"" + tvhProperty("publicKeySalt") + "\""
            }

            // Reduce the apk file size by enabling proguard
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            FirebasePerformance {
                // Set this flag to 'false' to disable @AddTrace annotation processing and
                // automatic HTTP/S network request monitoring for a specific build variant at compile time.
                instrumentationEnabled false
            }
        }
        dev {
            // Show all features when true
            buildConfigField "Boolean", "UNLOCKED", "false"
            // Enable all logging, otherwise it is suppressed
            buildConfigField "Boolean", "DEBUG_LOG", "true"

            // The property file must exist in release mode so that the
            // actual values can be assigned from the property file to these fields.
            if (tvhHasProperty("developerEmail")) {
                buildConfigField "String", "DEVELOPER_EMAIL", "\"" + tvhProperty("developerEmail") + "\""
            }
            if (tvhHasProperty("publicKeySalt")) {
                buildConfigField "String", "PUBLIC_KEY_SALT", "\"" + tvhProperty("publicKeySalt") + "\""
            }

            // Reduce the apk file size by enabling proguard
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            FirebasePerformance {
                // Set this flag to 'false' to disable @AddTrace annotation processing and
                // automatic HTTP/S network request monitoring for a specific build variant at compile time.
                instrumentationEnabled false
            }
        }
    }
}

def build_param = "${build}"

if (build_param != "dev") {
    // exclude the dev build in the production build
    android.variantFilter { variant ->
        if (variant.buildType.name == 'dev') {
            variant.setIgnore(true)
        }
    }
} else {
    // exclude all other builds except the dev build
    android.variantFilter { variant ->
        if (variant.buildType.name != 'dev') {
            variant.setIgnore(true)
        }
    }
}

dependencies {
    // Dependency on local binaries
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    def fragment_version = '1.2.2'
    def lifecycle_version = '2.1.0'
    def material_dialogs_version = '3.1.1'
    def dagger_version = '2.26'

    // AndroidX libraries
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.annotation:annotation:1.1.0'
    implementation 'androidx.preference:preference:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-beta4'
    implementation 'androidx.viewpager2:viewpager2:1.0.0'
    implementation 'androidx.work:work-runtime:2.3.1'
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    kapt "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    implementation "androidx.fragment:fragment:$fragment_version"
    debugImplementation "androidx.fragment:fragment-testing:$fragment_version"

    // Misc stuff like logging, image loading, billing, casting
    implementation 'com.google.android.material:material:1.2.0-alpha04'
    implementation 'com.jakewharton.timber:timber:4.7.1'
    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'com.android.billingclient:billing:2.1.0'
    implementation 'com.google.android.gms:play-services-cast-framework:18.0.0'
    implementation 'androidx.mediarouter:mediarouter:1.1.0'

    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.3'

    // Material navigation drawer and dialogs
    implementation "com.afollestad.material-dialogs:core:$material_dialogs_version"
    implementation "com.afollestad.material-dialogs:input:$material_dialogs_version"
    implementation "com.afollestad.material-dialogs:files:$material_dialogs_version"
    implementation "com.afollestad.material-dialogs:datetime:$material_dialogs_version"
    implementation "com.afollestad.material-dialogs:lifecycle:${material_dialogs_version}"
    implementation 'com.mikepenz:materialdrawer:7.0.0-rc08'

    // Firebase Crash Reporting and Performance Monitoring
    implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'
    implementation 'com.google.firebase:firebase-core:17.2.2'
    implementation 'com.google.firebase:firebase-perf:19.0.5'

    // Dependency injection
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    // App data access via browser
    debugImplementation('com.facebook.stetho:stetho:1.5.1') {
        exclude group: "com.google.code.findbugs", module: "jsr305"
    }

    // Use multidex because the method count is over 64k
    implementation 'androidx.multidex:multidex:2.0.1'

    // ----------------------------------------------------------------------------
    // Required internal libraries for the application
    implementation 'org.tvheadend.tvhclient.htsp:htsp:1.0.1'
    implementation 'org.tvheadend.tvhclient.exoplayer:exoplayer-core:2.11.1'
    implementation 'org.tvheadend.tvhclient.exoplayer:exoplayer-ui:2.11.1'
    implementation 'org.tvheadend.tvhclient.exoplayer:exoplayer-dash:2.11.1'
    implementation 'org.tvheadend.tvhclient.exoplayer:extension-ffmpeg:2.11.1'
    implementation project(':data')

    // ----------------------------------------------------------------------------
    // Define versions for testing dependencies
    def junit_version = '4.13'
    def androidx_test_version = '1.2.0'
    def espresso_version = '3.2.0'

    // Required dependencies for unit testing
    testImplementation "junit:junit:$junit_version"
    testImplementation "androidx.test:core:$androidx_test_version"
    testImplementation "androidx.test:runner:$androidx_test_version"
    testImplementation "androidx.test:rules:$androidx_test_version"
    testImplementation 'androidx.test.ext:junit:1.1.1'
    testImplementation "org.robolectric:robolectric:4.3.1"

    // Required dependencies for UI Testing
    androidTestImplementation "junit:junit:$junit_version"
    androidTestImplementation "androidx.test:core:$androidx_test_version"
    androidTestImplementation "androidx.test:runner:$androidx_test_version"
    androidTestImplementation "androidx.test:rules:$androidx_test_version"
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espresso_version"
    androidTestImplementation 'com.google.truth:truth:1.0.1'
}

apply plugin: 'com.google.gms.google-services'